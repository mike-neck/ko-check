name: publish to sonatype ossrh

on:
  pull_request:
    types: [closed]

jobs:
  publish-artifacts:
    name: build and publish artifacts
    runs-on: ubuntu-18.04
    if: startsWith( github.event.pull_request.title , 'release/' ) && github.event.pull_request.merged
    env:
      REF: ${{ github.ref }}

    steps:
      -
        name: Calculate release level
        id: level
        env:
          RELEASE_TITLE: ${{ github.event.pull_request.title }}
        run: |
          echo "::set-output name=value::$(echo ${RELEASE_TITLE} | cut -d '/' -f2)"

      -
        name: Checkout Project
        uses: actions/checkout@v2

      -
        name: Current version
        uses: actions-ecosystem/action-get-latest-tag@v1
        id: current-version

      -
        name: "calculate next version (from: ${{ steps.current-version.outputs.tag }}, with-update: ${{ steps.level.outputs.value }})"
        id: next-version
        uses: actions-ecosystem/action-bump-semver@v1
        with:
          current_version: ${{ steps.current-version.outputs.tag }}
          level: ${{ steps.level.outputs.value }}

      -
        name: push tag
        uses: actions-ecosystem/action-push-tag@v1
        with:
          tag: ${{ steps.next-version.outputs.new_version }}
          message: "Release version ${{ steps.next-version.outputs.new_version }}"

      - name: project version
        id: projectVersion
        run: echo "::set-output name=version::$(echo $NEW_VERSION)"
        env:
          NEW_VERSION: ${{ steps.next-version.outputs.new_version }}

      -
        name: Setup Java
        uses: actions/setup-java@v1.3.0
        with:
          java-version: '8'

      -
        name: Cache Gradle
        id: gradle
        uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: gradle-${{ hashFiles('ktcheck-api/build.gradle.kts') }}-${{ hashFiles('**/gradle-wrapper.properties') }}
          restore-keys: gradle-

      -
        name: Publish All
        run: ./gradlew publishAll
        env:
          ORG_GRADLE_PROJECT_KT_CHECK_VERSION: ${{ steps.projectVersion.outputs.version }}
          ORG_GRADLE_PROJECT_privateKey: ${{ secrets.PGP_ARMORED_PRIVATE_KEY }}
          ORG_GRADLE_PROJECT_pgpPassword: ${{ secrets.PGP_PASS_PHREASE }}
          ORG_GRADLE_PROJECT_sonatypeUrl: "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
          ORG_GRADLE_PROJECT_sonatypeUsername: ${{ secrets.SONATYPE_USERNAME }}
          ORG_GRADLE_PROJECT_sonatypePassword: ${{ secrets.SONATYPE_PASSWORD }}

      -
        name: Publish github
        run: ./gradlew publishGithubAll
        env:
          ORG_GRADLE_PROJECT_KT_CHECK_VERSION: ${{ steps.projectVersion.outputs.version }}
          ORG_GRADLE_PROJECT_privateKey: ${{ secrets.PGP_ARMORED_PRIVATE_KEY }}
          ORG_GRADLE_PROJECT_pgpPassword: ${{ secrets.PGP_PASS_PHREASE }}
          ORG_GRADLE_PROJECT_githubPackageUrl: "https://maven.pkg.github.com/mike-neck/ktcheck"
          ORG_GRADLE_PROJECT_githubUsername: ${{ github.event.repository.owner.login }}
          ORG_GRADLE_PROJECT_githubToken: ${{ secrets.GITHUB_TOKEN }}
